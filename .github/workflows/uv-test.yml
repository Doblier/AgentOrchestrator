name: UV Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'
      
      - name: Install UV
        run: |
          pip install --upgrade pip
          pip install uv
      
      - name: Install dependencies
        run: |
          # The --system flag tells UV to install packages at the system level
          # This avoids the need for a virtual environment in CI
          uv pip install --system -e ".[test]"
      
      - name: Lint with ruff
        run: |
          uv pip install --system ruff black
          # Run formatters first to fix issues automatically
          black .
          # Then run linters to check for any remaining issues
          ruff check .
          black --check .
      
      - name: Prepare test environment
        run: |
          # Create output directory needed by some tests
          mkdir -p output
      
      - name: Test with pytest
        run: |
          # Now we can run all tests as we've properly mocked the Google API
          python -m pytest 
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY || 'dummy-key-for-testing' }}
          DATABASE_URL: ${{ secrets.DATABASE_URL || 'postgresql://test:test@localhost:5432/test' }}
          AUTH_DEFAULT_KEY: ${{ secrets.AUTH_DEFAULT_KEY || 'test-api-key' }}
          REDIS_HOST: ${{ secrets.REDIS_HOST || 'localhost' }}
          REDIS_PORT: ${{ secrets.REDIS_PORT || '6379' }} 